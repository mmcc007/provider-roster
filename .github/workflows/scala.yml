# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ "feat/init" ]
  pull_request:
    branches: [ "feat/init" ]
  workflow_dispatch: # This enables manual triggering of the workflow

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Set up Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: '11'
        # sbt-version: '1.4.7'
    - name: Install Apache Spark
      run: |
          wget https://archive.apache.org/dist/spark/spark-3.1.2/spark-3.1.2-bin-hadoop3.2.tgz
          tar xvf spark-3.1.2-bin-hadoop3.2.tgz
          sudo mv spark-3.1.2-bin-hadoop3.2 /opt/spark
          export SPARK_HOME=/opt/spark
          export PATH=$SPARK_HOME/bin:$PATH
  
    - name: Verify Spark Installation
      run: |
          /opt/spark/bin/spark-shell --version 
    - name: Install dependencies
      run: sbt update
    - name: Run tests
      run: sbt test
    - name: Upload JSON output
      uses: actions/upload-artifact@v2
      with:
        name: spark-output
        path: target/output/**/*.json

  release:
          needs: build
          runs-on: ubuntu-latest
          # if: github.ref == 'refs/heads/main' # Only create releases from main branch

          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          steps:
          - name: Checkout repository
            uses: actions/checkout@v2
      
          - name: Print GITHUB_TOKEN Scopes
            run: |
              curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user
              curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/permissions/workflow
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              tag_name: ${{ github.sha }}
              release_name: Release ${{ github.sha }}
              draft: false
              prerelease: false

          - name: Install GitHub CLI
            run: |
                sudo apt-get update
                sudo apt-get install -y gh
                echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

          - name: Upload Release Assets
            run: |
                for file in target/output/**/*.json; do
                  echo "Uploading $file"
                  gh release upload ${{ steps.create_release.outputs.upload_url }} "$file" --clobber
                done
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}